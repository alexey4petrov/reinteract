This directory contains a script for creating an application bundle
of Reinteract and it's dependencies. The script also knows how to take
that application bundle and package it into a Disk Image (dmg) file
to use as an installer. The disk image file is set up with an
explanatory background image and symlink to the Applications folder.

Usage
=====

This describes how to create an dmg installer with universal binaries
(ppc and i386), without debug symbols. The script can also
be used (with fairly obvious modifications) to build only for
one architecture, to build using devel instead of release configurations,
or to just build an app bundle and not a dmg.

 * First you need to have a build set up configured according to
   tools/build_deps_osx/README.

 * You also need the pkg-dmg script from:

    http://mxr.mozilla.org/seamonkey/source/build/package/mac_osx/

   somewhere in your path. (Copy it into your ~/bin), say

 * Build PPC and i386 release versions of the dependencies:

     JHB_VARIANT=release-i386 tools/build_deps_osx/build.sh
     JHB_VARIANT=release-ppc tools/build_deps_osx/build.sh

 * Build a universal binary of ReinteractWrapper

     JHB=reinteract JHB_VARIANT=release-i386 jhbuild shell
     export OBJC="gcc -arch i386 -arch ppc"
     export CC="gcc -arch i386 -arch ppc"
     export CFLAGS="-O2"
     export CPP="gcc -E"
     ./autogen.sh --enable-python-thunks
     make

   FIXME: To get make to pass, you'll need to delete libJPEG.dylib,
     libPng.dylib, libTIFF.dylib from the release-i386 directory.
     (paths will be obvious from the errors.)
     These names are not needed for the deployment and cause the
     system frameworks to try and link against the single-arch
     versions of these libraries instead of of the system versions.

     Don't delete the lowercase libjpeg.., etc, names.

     This probably should be done by build.sh.

 * Now build the .dmg

     python tools/build_bundle/build_bundle.py --add-arch=/opt/reinteract/release-ppc/install

   That will write a file Reinteract-<x.y.z>.dmg into the current
   directory.  It will also write a file Reinteract-<x.y.z>.dmg.manifest,
   which is just a list of all the files in the app bundle. This is meant
   for version-to-version comparisons to avoid accidental inclusion or
   removal of files.
